# Stratford AI - Docker Compose Configuration
# For local development and testing with containerized services

version: '3.8'

services:
  # =============================================================================
  # Stratford AI Application
  # =============================================================================
  stratford-ai:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: stratford-ai-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - STRATFORD_RANDOM_SEED=42
      - STRATFORD_VERSION=1.0.0
      - LOG_LEVEL=info
      - ENABLE_MOCK_DATA=false
      - CACHE_DURATION_MINUTES=60
      - PORT=3000
      - HOSTNAME=0.0.0.0
    volumes:
      - ./data:/app/data
      - app_data:/app/data
    networks:
      - stratford-network
    healthcheck:
      test: ["CMD", "node", "server.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stratford-ai.rule=Host(`localhost`)"
      - "traefik.http.services.stratford-ai.loadbalancer.server.port=3000"

  # =============================================================================
  # Redis Cache (Optional - for enhanced caching)
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: stratford-ai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stratford-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # =============================================================================
  # Nginx Reverse Proxy (Optional - for load balancing)
  # =============================================================================
  nginx:
    image: nginx:alpine
    container_name: stratford-ai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - stratford-network
    depends_on:
      - stratford-ai
    profiles:
      - production

  # =============================================================================
  # PostgreSQL Database (Optional - for future features)
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: stratford-ai-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: stratford_user
      POSTGRES_PASSWORD: stratford_password
      POSTGRES_DB: stratford_ai
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - stratford-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stratford_user -d stratford_ai"]
      interval: 10s
      timeout: 5s
      retries: 3
    profiles:
      - database

# =============================================================================
# Volumes
# =============================================================================
volumes:
  app_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  nginx_logs:
    driver: local

# =============================================================================
# Networks
# =============================================================================
networks:
  stratford-network:
    driver: bridge
    name: stratford-ai-network